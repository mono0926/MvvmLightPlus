<view:MainViewBase
    x:Class="Mono.App.AmazonSalesRank.View.MainView"
    x:Name="pageRoot"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Mono.App.AmazonSalesRank"
    xmlns:view="using:Mono.App.AmazonSalesRank.View"
    xmlns:common="using:Mono.App.AmazonSalesRank.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:sample="using:Mono.App.AmazonSalesRank.SampleData"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:cmd="using:Mono.MvvmLightPlus.Command"
    xmlns:ctrl="using:Mono.App.AmazonSalesRank.Control"
    mc:Ignorable="d">


    <view:MainViewBase.Resources>
        <CollectionViewSource
            x:Name="rankingSource"
            Source="{Binding Rankings}"
            IsSourceGrouped="true"
            ItemsPath="Items"
            d:Source="{Binding Rankings, Source={d:DesignInstance Type=sample:RankingSource, IsDesignTimeCreatable=True}}"/>
        <CollectionViewSource
            x:Name="snappedSource"
            Source="{Binding Rankings}"
            d:Source="{Binding Rankings, Source={d:DesignInstance Type=sample:RankingSource, IsDesignTimeCreatable=True}}"/>
    </view:MainViewBase.Resources>
	<view:MainViewBase.BottomAppBar>
		<AppBar >
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<StackPanel Orientation="Horizontal"/>
				<StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
				    <Button
        AutomationProperties.Name="Refresh"
        Style="{StaticResource RefreshAppBarButtonStyle}"
        Command="{Binding RefreshCommand}" />
				</StackPanel>
			</Grid>
		</AppBar>
	</view:MainViewBase.BottomAppBar>

    <Grid Style="{StaticResource LayoutRootStyle}">
    	<VisualStateManager.VisualStateGroups>
    		<VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="Snapped">
    				<Storyboard>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="itemListView">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<Visibility>Visible</Visibility>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
    					<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="semanticZoom">
    						<DiscreteObjectKeyFrame KeyTime="0">
    							<DiscreteObjectKeyFrame.Value>
    								<Visibility>Collapsed</Visibility>
    							</DiscreteObjectKeyFrame.Value>
    						</DiscreteObjectKeyFrame>
    					</ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(HeaderControl.IsSnapped)" Storyboard.TargetName="HeaderControl">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
    			</VisualState>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait" />
            </VisualStateGroup>
    	</VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ctrl:HeaderControl x:Name="HeaderControl" />

        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemListView"
            AutomationProperties.Name="Grouped Items"
            Grid.Row="1"
            Visibility="Collapsed"
            Margin="0,-10,0,0"
            Padding="10,0,0,60"
        			ItemsSource="{Binding Source={StaticResource snappedSource}}"
            ItemTemplate="{StaticResource SnappedStandard80ItemTemplate}"
            SelectionMode="None"
            IsSwipeEnabled="false"
            IsItemClickEnabled="True"
            cmd:GridViewItemClickCommand.Command="{Binding GenreCommand}"
            >
        </ListView>
        <SemanticZoom x:Name="semanticZoom" Grid.Row="1">
        	<SemanticZoom.ZoomedInView>

        		<GridView
        			x:Name="itemGridView"
        			AutomationProperties.AutomationId="ItemGridView"
        			AutomationProperties.Name="Grouped Items"
        			Padding="116,0,40,46"
        			ItemsSource="{Binding Source={StaticResource rankingSource}}"
        			ItemTemplate="{StaticResource MyStandard250x250ItemTemplate}"
        			SelectionMode="None"
        			IsSwipeEnabled="false"
        			IsItemClickEnabled="True"
        			cmd:GridViewItemClickCommand.Command="{Binding ItemCommand}" >

        			<GridView.ItemsPanel>
        				<ItemsPanelTemplate>
        					<VirtualizingStackPanel Orientation="Horizontal"/>
        				</ItemsPanelTemplate>
        			</GridView.ItemsPanel>
        			<GridView.GroupStyle>
        				<GroupStyle>
        					<GroupStyle.HeaderTemplate>
        						<DataTemplate>
        							<Grid Margin="1,0,0,6">
        								<Button
        									Command="{Binding DataContext.GenreCommand, ElementName=pageRoot}"
        									CommandParameter="{Binding}"
        									AutomationProperties.Name="Group Title"
        									Style="{StaticResource TextPrimaryButtonStyle}" >
        									<StackPanel Orientation="Horizontal">
        										<TextBlock Text="{Binding Title}" Margin="3,-7,10,10" 
        											Style="{StaticResource GroupHeaderTextStyle}" />
        										<TextBlock Text="{StaticResource ChevronGlyph}" 
        											FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" 
        											Style="{StaticResource GroupHeaderTextStyle}"/>
        									</StackPanel>
        								</Button>
        							</Grid>
        						</DataTemplate>
        					</GroupStyle.HeaderTemplate>
        					<GroupStyle.Panel>
        						<ItemsPanelTemplate>
        							<VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
        						</ItemsPanelTemplate>
        					</GroupStyle.Panel>
        				</GroupStyle>
        			</GridView.GroupStyle>
        		</GridView>

        	</SemanticZoom.ZoomedInView>
        	<SemanticZoom.ZoomedOutView>
        		<GridView
        			x:Name="itemListView_Copy"
        			AutomationProperties.AutomationId="ItemListView"
        			AutomationProperties.Name="Grouped Items"
        			Margin="116,0,-6,-16"
        			Padding="10,0,0,60"
        			ItemsSource="{Binding CollectionGroups, Source={StaticResource rankingSource}}"
        			ItemTemplate="{StaticResource ZoomedOutStandard500x130ItemTemplate}"
        			SelectionMode="None"
        			IsSwipeEnabled="false"
        			IsItemClickEnabled="True"
        			cmd:GridViewItemClickCommand.Command="{Binding GenreCommand}"
            >
        		</GridView>

        	</SemanticZoom.ZoomedOutView>
        </SemanticZoom>

    </Grid>
</view:MainViewBase>
